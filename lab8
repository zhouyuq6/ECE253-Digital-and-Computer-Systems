	.text
	.global	_start
_start:	LDR	R4,=TESTNUM
	MOV	R5,#0
MAIN:	LDR	R1,[R4]
	ADD	R4,#4
	CMP	R1,#0
	BEQ	MAIN_END
	BL	ONES
	CMP	R5,R0
	MOVLT	R5,R0
	B	MAIN
MAIN_END:B	MAIN_END

ONES:	MOV	R0,#0
L_LOOP:	CMP 	R1,#0
	BEQ 	L_END
	LSR	R2,R1,#1
	AND	R1,R2,R1
	ADD	R0,#1
	B	L_LOOP
L_END:	MOV	PC,LR

TESTNUM:.word	0x1003FE00F
	.word	0xBE211110	//5'1s
	.word	0xBF211110	//6'1s
	.word	0xBFA1111F	//7'1s
	.word	0xBFC1111F	//8'1s
	.word	0xBFE1111F	//9'1s

Part2
	.text
	.global	_start
_start:	LDR	R0,=TESTNUM
	MOV	R5,#0
	MOV	R6,#0
	MOV	R7,#0
MAIN:	LDR	R1,[R0]
	ADD	R0,#4
	CMP	R1,#0
	BEQ	MAIN_END
	BL	ONES
	BL	ZEROS
	BL	ALTERNATE
	B	MAIN
MAIN_END:B	MAIN_END

ONES:	MOV	R5,#0
O_LOOP:	CMP 	R1,#0
	BEQ 	O_END
	LSR	R2,R1,#1
	AND	R1,R2,R1
	ADD	R5,#1
	B	O_LOOP
O_END:	MOV	PC,LR

ZEROS:	MOV	R6,#0
Z_LOOP:	CMP 	R1,0xFFFFFFFF
	BEQ 	Z_END
	LSR	R3,R1,#1
	OR	R1,R3,R1
	ADD	R6,#1
	B	Z_LOOP
Z_END:	MOV	PC,LR

ALTERNATE:MOV	R7,#0
	LSR	R4,R1,#1
	XOR	R1,R4,R1
A_LOOP:	CMP 	R1,#0
	BEQ 	A_END
	LSR	R4,R1,#1
	AND	R1,R4,R1
	ADD	R7,#1
	B	A_LOOP
A_END:	MOV	PC,LR
